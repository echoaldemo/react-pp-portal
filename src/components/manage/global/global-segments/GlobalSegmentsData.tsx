export const GlobalSegmentsData: any = [
  {
    uuid: "857c4e1c-56a9-11e7-9851-02420a000908",
    name: "GSegment Data 1",
    company: null,
    slug: "gsegment-data-1",
    active: false,
    type: "defaults",
    xml:
      '<nodes>\n  <node id="gk_hello">\n    <auto>\n      <focus widget="prospect.disposition_combo"/>\n      <wait milliseconds="1250"/>\n      <check-phrase book="first-names-question" slug="{{prospect.first_name}}">\n        <true>\n          <!-- this intro needs to be implemented in campaign-specific nodes -->\n          <iterate key="gk_hello-prospect"/>\n        </true>\n        <false>\n          <!-- this needs to be implemented in campaign-specific nodes -->\n          <check-phrase book="first-names" slug="{{prospect.first_name}}">\n            <true>\n              <iterate key="gk_hello-prospect"/>\n            </true>\n            <false>\n              <set-var location="notes" name="Focused-Prospect" value="False"/>\n              <goto node="gk_intro"/>\n            </false>\n          </check-phrase>\n        </false>\n      </check-phrase>\n    </auto>\n    <options>\n      <opt key-combo="F1" name="PUSH only if correct person">\n        <set-var location="notes" name="Correct-Prospect" value="True"/>\n        <!-- this needs to be implemented in campaign-specific nodes -->\n        <goto node="gk_intro"/>\n      </opt>\n      <opt key-combo="F2" name="PUSH only if not correct person">\n        <set-var location="notes" name="Correct-Prospect" value="False"/>\n        <goto node="gk_intro"/>\n      </opt>\n      <opt key-combo="F3" name="&quot;I will get them&quot;">\n        <iterate key="gk_thanks-appreciate"/>\n      </opt>\n    </options>\n  </node>\n</nodes>',
    variables: {
      test: "twqt"
    }
  },
  {
    uuid: "af99df9e-fc69-11e9-8157-0242ac110008",
    name: "GSegment Data 2",
    company: null,
    slug: "gsegment-data-2",
    active: true,
    type: "defaults",
    xml: "<nodes/>",
    variables: {}
  },
  {
    uuid: "50a79920-20b2-11e8-afda-0242ac110002",
    name: "GSegment Data 3",
    company: null,
    slug: "gsegment-data-3",
    active: true,
    type: "nodes",
    xml: "<nodes/>",
    variables: {}
  },
  {
    uuid: "6b4e334c-20b2-11e8-9a89-0242ac110004",
    name: "GSegment Data 4",
    company: null,
    slug: "gsegment-data-4",
    active: true,
    type: "nodes",
    xml: "<nodes/>",
    variables: {}
  },
  {
    uuid: "f2753d26-56a9-11e7-b6ca-02420a000908",
    name: "GSegment Data 5",
    company: null,
    slug: "gsegment-data-5",
    active: false,
    type: "options",
    xml:
      '<defaults>\n  <!-- Gatekeeper Defaults iterables-->\n  <declare-iterable key="gk_prospect-number" default="1" loop="all">\n    <group>\n      <audio namespace="gk" key="prospect-number-1">For security reasons I don\'t have access to your personal file so my system is going to read back your number. The number we have is ...</audio>\n      <text-to-speech>{{prospect.primary_phone}}</text-to-speech>\n    </group>\n    <group>\n      <audio namespace="gk" key="prospect-number-2">Again, for security reasons I don\'t have access to your file so my system is going to read back your number. The number we have is ...</audio>\n      <text-to-speech>{{prospect.primary_phone}}</text-to-speech>\n    </group>\n  </declare-iterable>\n  <declare-iterable key="gk_prospect-full-address" default="1" loop="all">\n    <group>\n      <audio namespace="gk" key="prospect-full-address-1">Okay just because your information is secure my system will read it back to you..</audio>\n      <text-to-speech>{{prospect.street}}{{prospect.city}}{{prospect.state}}{{prospect.zip_code}}</text-to-speech>\n    </group>\n    <group>\n      <audio namespace="gk" key="prospect-full-address-2">Again, because your information is secure my system will read it back to you..</audio>\n      <text-to-speech>{{prospect.street}}{{prospect.city}}{{prospect.state}}{{prospect.zip_code}}</text-to-speech>\n    </group>\n  </declare-iterable>\n  <declare-iterable key="gk_one-second" loop="all" default="0">\n    <audio namespace="gk" key="one-second-1">Okay, hold on, just give me one second.</audio>\n    <audio namespace="gk" key="one-second-2">Uh, hang on, just give me a second here.</audio>\n    <audio namespace="gk" key="one-second-3">Okay, just a second here.</audio>\n    <audio namespace="gk" key="one-second-4">Alright, hold on for a moment.</audio>\n    <audio namespace="gk" key="one-second-5">Yep, just one second please.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_hold" loop="all" default="0">\n    <audio namespace="gk" key="hold-1">Um, would it be alright if I put you on hold a minute?</audio>\n    <audio namespace="gk" key="hold-2">Uh, would you mind if I put you on hold for a minute?</audio>\n    <audio namespace="gk" key="hold-3">I\'m sorry, but would you mind if I put you on hold for just a few minutes?</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_what-is-caller-id" default="0">\n    <audio namespace="gk" key="what-is-caller-id-1">Just before I let you go, so we can double check our system, can you please tell me what number shows up on your caller ID?</audio>\n    <audio namespace="gk" key="what-is-caller-id-2">Before I let you go, can you please tell me what number shows up on your caller ID?</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_what-is-caller-display-name" default="0">\n    <audio namespace="gk" key="what-is-display-name-1">Just before I let you go, so we can double check our system, can you please tell me what name, if any, shows up on your phone?</audio>\n    <audio namespace="gk" key="what-is-display-name-2">Before I let you go, can you please tell me what name, if any, shows up on your phone?</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_prospect-first-name" loop="all" default="0">\n    <check-phrase book="first-names" slug="{{prospect.first_name}}">\n      <true>\n        <phrase book="first-names" slug="{{prospect.first_name}}"/>\n      </true>\n      <false>\n        <msg milliseconds="5000">There is no recording for the \'first-names\' phrase "{{prospect.first_name}}"</msg>\n      </false>\n    </check-phrase>\n    <check-phrase book="first-names-question" slug="{{prospect.first_name}}">\n      <true>\n        <phrase book="first-names-question" slug="{{prospect.first_name}}"/>\n      </true>\n      <false>\n        <msg milliseconds="5000">There is no recording for the \'first-names-question\' phrase "{{prospect.first_name}}"</msg>\n      </false>\n    </check-phrase>\n    <check-phrase book="first-names" slug="{{prospect.first_name}}">\n      <true>\n        <group>\n          <audio namespace="gk" key="the-name-is">Uh, the name I have is, um</audio>\n          <phrase book="first-names" slug="{{prospect.first_name}}"/>\n        </group>\n      </true>\n      <false>\n        <msg milliseconds="5000">There is no recording for the \'first-names\' phrase "{{prospect.first_name}}"</msg>\n      </false>\n    </check-phrase>\n    <check-phrase book="first-names" slug="{{prospect.first_name}}">\n      <true>\n        <group>\n          <audio namespace="gk" key="thats-right">That\'s right</audio>\n          <phrase book="first-names" slug="{{prospect.first_name}}"/>\n        </group>\n      </true>\n      <false>\n        <msg milliseconds="5000">There is no recording for the \'first-names\' phrase "{{prospect.first_name}}"</msg>\n      </false>\n    </check-phrase>\n  </declare-iterable>\n  <declare-iterable key="gk_are-they-available" loop="all" default="0">\n    <audio namespace="gk" key="are-they-available-1">Are they available?</audio>\n    <audio namespace="gk" key="are-they-available-2">Can I speak with them?</audio>\n    <audio namespace="gk" key="are-they-available-3">Ok, so can I speak with them?</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_ready-responses" loop="all" default="0">\n    <audio namespace="gk" key="ready-responses-1">Ready responses are sound board files that I use to stick to the script.</audio>\n    <audio namespace="gk" key="ready-responses-2">Again, ready responses are sound board files that I use to stick to the script.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_hear-that-a-lot" loop="all" default="0">\n    <audio namespace="gk" key="hear-that-a-lot-1">Yeah, I hear that a lot.</audio>\n    <audio namespace="gk" key="hear-that-a-lot-2">I know, I hear that a lot.</audio>\n    <audio namespace="gk" key="hear-that-a-lot-3">You know, I hear that a lot.</audio>\n  </declare-iterable>\n  <declare-iterable default="0" key="home-protect_uh-huh" loop="all">\n    <audio namespace="home-protect" key="uh-huh-1">Sorry, Is that a Yes?</audio>\n    <audio namespace="home-protect" key="uh-huh-2">Again, Is that a Yes?</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_rep-first-name" loop="all" default="0">\n    <audio namespace="gk" key="rep-first-name-1">[YOUR FIRST NAME].</audio>\n    <audio namespace="gk" key="rep-first-name-2">My name is [YOUR FIRST NAME].</audio>\n    <audio namespace="gk" key="rep-first-name-3">That\'s right, [YOUR FIRST NAME].</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_great" loop="all" default="0">\n    <audio namespace="gk" key="great-1">Great!</audio>\n    <audio namespace="gk" key="great-2">Nice!</audio>\n    <audio namespace="gk" key="great-3">Awesome!</audio>\n    <audio namespace="gk" key="great-4">That\'s great!</audio>\n    <audio namespace="gk" key="great-5">Alright!</audio>\n    <audio namespace="gk" key="great-6">Sweet!</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_great-to-hear" loop="all" default="0">\n    <audio namespace="gk" key="great-to-hear-1">That\'s great to hear!</audio>\n    <audio namespace="gk" key="great-to-hear-2">I\'m glad to hear it!</audio>\n    <audio namespace="gk" key="great-to-hear-3">Hey, that\'s great!</audio>\n    <audio namespace="gk" key="great-to-hear-4">Nice, I\'m glad to hear that!</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_great-thanks" loop="all" default="0">\n    <audio namespace="gk" key="great-thanks-1">Great, thanks!</audio>\n    <audio namespace="gk" key="great-thanks-2">Okay, great!</audio>\n    <audio namespace="gk" key="great-thanks-3">Ok, thanks!</audio>\n    <audio namespace="gk" key="great-thanks-4">Ok, good!</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_hello-are-you-there" loop="all" default="0">\n    <audio namespace="gk" key="hello-are-you-there-1">Hello? (1)</audio>\n    <audio namespace="gk" key="hello-are-you-there-2">Hello, are you there?</audio>\n    <audio namespace="gk" key="hello-are-you-there-3">Hey, is anybody there?</audio>\n    <audio namespace="gk" key="hello-are-you-there-4">Hello? (2)</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_hello-prospect" loop="all" default="0">\n    <check-phrase book="first-names-question" slug="{{prospect.first_name}}">\n      <true>\n        <group>\n          <audio namespace="gk" key="hello-prospect-1">Hello, may I please speak to, um</audio>\n          <phrase book="first-names-question" slug="{{prospect.first_name}}"/>\n        </group>\n      </true>\n      <false>\n        <check-phrase book="first-names" slug="{{prospect.first_name}}">\n          <true>\n            <group>\n              <audio namespace="gk" key="hello-prospect-1">Hello, may I please speak to, um</audio>\n              <phrase book="first-names" slug="{{prospect.first_name}}"/>\n            </group>\n          </true>\n          <false>\n            <msg milliseconds="5000">There is no recording for the \'first-names-question\' phrase "{{prospect.first_name}}"</msg>\n          </false>\n        </check-phrase>\n      </false>\n    </check-phrase>\n    <check-phrase book="first-names" slug="{{prospect.first_name}}">\n      <true>\n        <group>\n          <audio namespace="gk" key="hello-prospect-2">Yes, may I please speak to, uh</audio>\n          <phrase book="first-names" slug="{{prospect.first_name}}"/>\n        </group>\n      </true>\n      <false>\n        <msg milliseconds="5000">There is no recording for the \'first-names\' phrase "{{prospect.first_name}}"</msg>\n      </false>\n    </check-phrase>\n    <check-phrase book="first-names-question" slug="{{prospect.first_name}}">\n      <true>\n        <group>\n          <audio namespace="gk" key="hello-prospect-3">Hello?</audio>\n          <phrase book="first-names-question" slug="{{prospect.first_name}}"/>\n        </group>\n      </true>\n      <false>\n        <check-phrase book="first-names" slug="{{prospect.first_name}}">\n          <true>\n            <audio namespace="gk" key="hello-prospect-3">Hello?</audio>\n            <phrase book="first-names" slug="{{prospect.first_name}}"/>\n          </true>\n          <false>\n            <msg milliseconds="5000">There is no recording for the \'first-names-question\' phrase "{{prospect.first_name}}"</msg>\n          </false>\n        </check-phrase>\n      </false>\n    </check-phrase>\n  </declare-iterable>\n  <declare-iterable key="gk_junior" loop="all" default="0">\n    <audio namespace="gk" key="junior-1">Junior</audio>\n    <audio namespace="gk" key="junior-2">The younger one.</audio>\n    <audio namespace="gk" key="junior-3">Yes, the younger one.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_senior" loop="all" default="0">\n    <audio namespace="gk" key="senior-1">Senior</audio>\n    <audio namespace="gk" key="senior-2">The older one.</audio>\n    <audio namespace="gk" key="senior-3">Yes, the older one.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_laugh" loop="all" default="0">\n    <audio namespace="gk" key="laugh-1">(laugh naturally) (1)</audio>\n    <audio namespace="gk" key="laugh-2">(laugh naturally) (2)</audio>\n    <audio namespace="gk" key="laugh-3">(laugh naturally) (3)</audio>\n    <audio namespace="gk" key="laugh-4">(laugh naturally) (4)</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_no" loop="all" default="0">\n    <audio namespace="gk" key="no-1">No. (1)</audio>\n    <audio namespace="gk" key="no-2">No. (2)</audio>\n    <audio namespace="gk" key="no-3">Nope.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_no-sorry" loop="all" default="0">\n    <audio namespace="gk" key="no-sorry-1">No, sorry about that.</audio>\n    <audio namespace="gk" key="no-sorry-2">No, I\'m afraid not.</audio>\n    <audio namespace="gk" key="no-sorry-3">Nope, sorry.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_okay" loop="all" default="0">\n    <audio namespace="gk" key="okay-1">Okay. (1)</audio>\n    <audio namespace="gk" key="okay-2">Okay. (2)</audio>\n    <audio namespace="gk" key="okay-3">Okay. (3)</audio>\n    <audio namespace="gk" key="okay-4">Okay. (4)</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_no-problem" loop="all" default="0">\n    <audio namespace="gk" key="no-problem-1">No problem. (1)</audio>\n    <audio namespace="gk" key="no-problem-2">It\'s no problem.</audio>\n    <audio namespace="gk" key="no-problem-3">No problem. (2)</audio>\n    <audio namespace="gk" key="no-problem-4">Oh, no problem.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_i-dont-know" loop="all" default="0">\n    <audio namespace="gk" key="i-dont-know-1">Hmm, I don\'t know.</audio>\n    <audio namespace="gk" key="i-dont-know-2">Yea, that\'s a good question...I don\'t know.</audio>\n    <audio namespace="gk" key="i-dont-know-3">Um, yea, I don\'t know the answer to that.</audio>\n    <audio namespace="gk" key="i-dont-know-4">Uh, sorry, but I don\'t know, I\'m not sure.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_repeat-that" loop="all" default="0">\n    <audio namespace="gk" key="repeat-that-1">Could you repeat that?</audio>\n    <audio namespace="gk" key="repeat-that-2">Sorry, would you say that again please?</audio>\n    <audio namespace="gk" key="repeat-that-3">Er, say that again please?</audio>\n    <audio namespace="gk" key="repeat-that-4">Sorry, would say that one more time?</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_didnt-catch" loop="all" default="0">\n    <audio namespace="gk" key="didnt-catch-1">Sorry I didn\'t catch that. Can you say it again?</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_repeat-that-cant-hear" loop="all" default="0">\n    <audio namespace="gk" key="repeat-that-cant-hear-1">Hey, sorry, I\'m having trouble hearing you. Could you say that one more time?</audio>\n    <audio namespace="gk" key="repeat-that-cant-hear-2">Look, I apologize, but I can barely hear you. Would you say that louder this time?</audio>\n    <audio namespace="gk" key="repeat-that-cant-hear-3">Again, I just can\'t hear you. Would you mind speaking up and saying that again?</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_spell-that" loop="all" default="0">\n    <audio namespace="gk" key="spell-that-1">Can you spell that again please??</audio>\n    <audio namespace="gk" key="spell-that-2">I\'m sorry, could you please spell that a little slower?</audio>\n    <audio namespace="gk" key="spell-that-3">Again, I just can\'t hear you. Would you mind spelling that loud and clear for me again?</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_sorry" loop="all" default="0">\n    <audio namespace="gk" key="sorry-1">Sorry.</audio>\n    <audio namespace="gk" key="sorry-2">I\'m sorry.</audio>\n    <audio namespace="gk" key="sorry-3">I\'m sorry about that.</audio>\n    <audio namespace="gk" key="sorry-4">Sorry about that.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_sorry-to-hear" loop="all" default="0">\n    <audio namespace="gk" key="sorry-to-hear-1">Oh, I\'m sorry to hear that.</audio>\n    <audio namespace="gk" key="sorry-to-hear-2">That\'s terrible, I\'m sorry to hear that.</audio>\n    <audio namespace="gk" key="sorry-to-hear-3">I\'m so sorry to hear that, really I am.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_thanks" loop="all" default="0">\n    <audio namespace="gk" key="thanks-1">Thanks. (1)</audio>\n    <audio namespace="gk" key="thanks-2">Thanks. (2)</audio>\n    <audio namespace="gk" key="thanks-3">Thank you. (1)</audio>\n    <audio namespace="gk" key="thanks-4">Thank you. (2)</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_thanks-appreciate" loop="all" default="0">\n    <audio namespace="gk" key="thanks-appreciate-1">Thanks, I appreciate that.</audio>\n    <audio namespace="gk" key="thanks-appreciate-2">Thanks, that is kind of you to say.</audio>\n    <audio namespace="gk" key="thanks-appreciate-3">Thank you very much.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_how-are-you" loop="all" default="0">\n    <audio namespace="gk" key="how-are-you-1">So how are you?</audio>\n    <audio namespace="gk" key="how-are-you-2">So how\'s it going?</audio>\n    <audio namespace="gk" key="how-are-you-3">How are things?</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_im-great" loop="all" default="0">\n    <audio namespace="gk" key="im-great-1">I\'m doing well thanks.</audio>\n    <audio namespace="gk" key="im-great-2">I\'m great.</audio>\n    <audio namespace="gk" key="im-great-3">Things are good, thanks.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_few-minutes" loop="all" default="0">\n    <audio namespace="gk" key="few-minutes-2">I promise, this will be quick.</audio>\n    <audio namespace="gk" key="few-minutes-3">I know, but this will only take just a couple minutes.</audio>\n    <audio namespace="gk" key="few-minutes-4">Really, this going to go quickly.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_2to3-minutes" loop="all" default="0">\n    <audio namespace="gk" key="2to3-minutes-1">I understand, but really this will only take 2 to 3 minutes.</audio>\n    <audio namespace="gk" key="2to3-minutes-3">I know, but this will only take 2 to 3 minutes.</audio>\n    <audio namespace="gk" key="2to3-minutes-4">Really, this going to go quickly.</audio>\n    <audio namespace="gk" key="2to3-minutes-6">Again, If you are in a hurry this can take a little as 5  10 minutes.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_yes" loop="all" default="0">\n    <audio namespace="gk" key="yes-1">Yes.</audio>\n    <audio namespace="gk" key="yes-2">Yep.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_yes-correct" loop="all" default="0">\n    <audio namespace="gk" key="yes-correct-1">That\'s Correct</audio>\n    <audio namespace="gk" key="yes-correct-2">That\'s right</audio>\n    <audio namespace="gk" key="yes-correct-3">Correct</audio>\n    <audio namespace="gk" key="yes-correct-4">Right</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_yes-we-can" loop="all" default="0">\n    <audio namespace="gk" key="yes-we-can-1">Yes, we can do that.</audio>\n    <audio namespace="gk" key="yes-we-can-2">You bet, we can do that.</audio>\n    <audio namespace="gk" key="yes-we-can-3">Yeah, no problem, we can do that.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_excuse-me" loop="all" default="0">\n    <audio namespace="gk" key="excuse-me-1">Oh, Excuse me</audio>\n    <audio namespace="gk" key="excuse-me-2">Excuse me</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_sorry-to-interrupt" loop="all" default="0">\n    <audio namespace="gk" key="sorry-to-interrupt-1">Sorry to interrupt</audio>\n    <audio namespace="gk" key="sorry-to-interrupt-2">Oh, Sorry for interrupting</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_cant-discuss-personal-info" loop="all" default="0">\n    <audio namespace="gk" key="cant-discuss-personal-info-1">You know, I\'ve been asked not to discuss personal information with people on the phone. Is it alright if I just stick to my script and we move on with the call?</audio>\n    <audio namespace="gk" key="cant-discuss-personal-info-2">Again, I\'ve been asked not to discuss personal information with people on the phone. Is it alright if we just move on with the call?</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_stay-on-script" loop="all" default="0">\n    <audio namespace="gk" key="stay-on-script-1">I don\'t really have an answer to that and I\'m required to stick to my script for compliance reasons, so would it be ok if I continued?</audio>\n    <audio namespace="gk" key="stay-on-script-2">You know, My calls are being monitored and so I can\'t really reply to that...</audio>\n    <audio namespace="gk" key="stay-on-script-3">Sorry but I don\'t have an answer to that.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_dont-sue" loop="all" default="0">\n    <audio namespace="gk" key="dont-sue-1">Oh I\'m very sorry about calling you, we\'ll immediately take your number off our list and try never to call you again. Thanks for your patience, goodbye.</audio>\n    <audio namespace="gk" key="dont-sue-2">I\'m very sorry about calling you, we\'ll take your number off our list right away and try never to call you again. Thanks for your patience, goodbye.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_wrong-numger" loop="all" default="0">\n    <audio namespace="gk" key="end-wrong-number-1">Oh, okay, sorry about the inconvenience. We\'ll take your number off of our list. Have a nice day. Good bye.</audio>\n    <audio namespace="gk" key="end-wrong-number-2">Oh, okay, I\'m sorry to call you. We\'ll take your number off of our list. Have a nice day. Good bye.</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_uh-huh" loop="all" default="0">\n    <audio namespace="gk" key="uh-huh-1">Uh-huh (1)</audio>\n    <audio namespace="gk" key="uh-huh-2">Uh-huh (2)</audio>\n    <audio namespace="gk" key="uh-huh-3">MmHmm</audio>\n  </declare-iterable>\n  <declare-iterable key="gk_agent-using-prerecorded-audio" loop="all" default="0">\n    <audio namespace="gk" key="agent-using-prerecorded-audio-1">Well, I am a live agent, but I am using a technology that restricts me to scripted responses, so if you do not mind, can we continue the call?</audio>\n    <audio namespace="gk" key="agent-using-prerecorded-audio-2">Again, I am a live agent, but I am using a technology that restricts me to scripted responses, so if you do not mind, can we continue the call?</audio>\n    <audio namespace="gk" key="agent-using-prerecorded-audio-3">Like I said before, I am using a technology that restricts me to scripted responses, so if you do not mind, can we continue the call?</audio>\n  </declare-iterable>\n  <declare-iterable key="warmxfer_default-accepted" default="1" loop="all">\n    <audio namespace="warmxfer" key="default-accepted-1">Okay, sorry to interrupt, we now have a specialist on the line, and they will help you from here. Thank you for your time today and have a wonderful day!</audio>\n    <audio namespace="warmxfer" key="default-accepted-2">We now have a specialist on the line. Thank you for your time today and have a wonderful day!</audio>\n  </declare-iterable>\n</defaults>',
    variables: {
      "global-new": "{{global.new}}"
    }
  },
  {
    uuid: "bffb6fb6-5c24-11e7-8a24-02420a000909",
    name: "GSegment Data 6",
    company: null,
    slug: "gsegment-data-6",
    active: true,
    type: "options",
    xml:
      '<options>\n  <opt key-combo="CTRL-M" name="Prospect cannot hear">\n    <hashtag tags="prospectcannothear"/>\n  </opt>\n  <opt key-combo="CTRL-ALT-M" name="Bad Audio">\n    <hashtag tags="badaudio"/>\n  </opt>\n  <opt key-combo="CTRL-SHIFT-M" name="No Audio">\n    <hashtag tags="noaudio"/>\n  </opt>\n  <opt key-combo="CTRL-ALT-C" name="Call Can\'t Save">\n    <hashtag tags="callcantsave"/>\n  </opt>\n  <opt key-combo="CTRL-SHIFT-L" name="No Bowout">\n    <hashtag tags="nobowout"/>\n  </opt>\n  <opt key-combo="CTRL-ALT-L" name="Stuck">\n    <hashtag tags="stuck"/>\n  </opt>\n</options>',
    variables: {}
  },
  {
    uuid: "dec1a3e6-56a9-11e7-b841-02420a000908",
    name: "GSegment Data 7",
    company: null,
    slug: "gsegment-data-7",
    active: true,
    type: "options",
    xml:
      '<options>\n  <!-- endings -->\n  <!-- Gatekeeper Options endings -->\n  <opt key-combo="ALT-1" name="END do not call">\n    <switch varname="pitch.gk_use-custom-donotcall-handler">\n      <equals value="true">\n        <set-var location="pitch" name="gk_disp" value="donotcall"/>\n        <goto node="gk_custom-disposition-handler"/>\n      </equals>\n      <else none="1">\n        <set-var location="pitch" name="Last Iterated Key" value="DNC"/>\n        <set-widget-value widget="prospect.disposition_combo" value="{{pitch.gk_donotcall}}"/>\n        <audio namespace="gk" key="end-do-not-call">Okay, sorry about that. We\'ll take your number off our list. Have a nice day. Good bye.</audio>\n        <iterate key="usell_error-logging"/>\n        <wait milliseconds="1000"/>\n        <hangup save-and-close="1"/>\n      </else>\n    </switch>\n  </opt>\n  <opt key-combo="ALT-SHIFT-1" name="END do not call SAY sorry">\n    <switch varname="pitch.gk_use-custom-donotcall-handler">\n      <equals value="true">\n        <set-var location="pitch" name="gk_disp" value="donotcallsorry"/>\n        <goto node="gk_custom-disposition-handler"/>\n      </equals>\n      <else none="1">\n        <set-widget-value widget="prospect.disposition_combo" value="{{pitch.gk_donotcall}}"/>\n        <set-var location="pitch" name="Last Iterated Key" value="DNC Escalate"/>\n        <audio namespace="gk" key="end-do-not-call-so-sorry">Oh dear, I am so sorry to hear that. I apologize for disturbing you. Good bye.</audio>\n        <iterate key="usell_error-logging"/>\n        <wait milliseconds="1000"/>\n        <hangup save-and-close="1"/>\n      </else>\n    </switch>\n  </opt>\n  <opt key-combo="ALT-2" name="END wrong number">\n    <switch varname="pitch.gk_use-custom-wrongnumber-handler">\n      <equals value="true">\n        <set-var location="pitch" name="gk_disp" value="wrongnumber"/>\n        <goto node="gk_custom-disposition-handler"/>\n      </equals>\n      <else none="1">\n        <set-widget-value widget="prospect.disposition_combo" value="{{pitch.gk_wrongnumber}}"/>\n        <set-var location="pitch" name="Last Iterated Key" value="Wrong Number"/>\n        <audio namespace="gk" key="end-wrong-number">Oh, okay, sorry about the inconvenience. Thank you for your time. Have a great day. Good bye.</audio>\n        <iterate key="usell_error-logging"/>\n        <wait milliseconds="1000"/>\n        <hangup save-and-close="1"/>\n      </else>\n    </switch>\n  </opt>\n  <opt key-combo="ALT-3" name="END not interested">\n    <switch varname="pitch.gk_use-custom-notinterested-handler">\n      <equals value="true">\n        <set-var location="pitch" name="gk_disp" value="notinterested"/>\n        <goto node="gk_custom-disposition-handler"/>\n      </equals>\n      <else none="1">\n        <set-widget-value widget="prospect.disposition_combo" value="{{pitch.gk_notinterested}}"/>\n        <set-var location="pitch" name="Last Iterated Key" value="Not Interested"/>\n        <audio namespace="gk" key="end-not-interested">Oh okay. Well, I\'m sorry I couldn\'t help you today. Best of luck with everything, and have a great day. Good bye.</audio>\n        <iterate key="usell_error-logging"/>\n        <wait milliseconds="1000"/>\n        <hangup save-and-close="1"/>\n      </else>\n    </switch>\n  </opt>\n  <opt key-combo="ALT-4" name="END not available">\n    <switch varname="pitch.gk_use-custom-notavailable-handler">\n      <equals value="true">\n        <set-var location="pitch" name="gk_disp" value="notavailable"/>\n        <goto node="gk_custom-disposition-handler"/>\n      </equals>\n      <else none="1">\n        <set-widget-value widget="prospect.disposition_combo" value="{{pitch.gk_notavailable}}"/>\n        <set-var location="pitch" name="Last Iterated Key" value="Not Available"/>\n        <audio namespace="gk" key="end-not-available">Oh, okay, well I\'ll just call back another time. Have a great day. Goodbye.</audio>\n        <iterate key="usell_error-logging"/>\n        <wait milliseconds="1000"/>\n        <hangup save-and-close="1"/>\n      </else>\n    </switch>\n  </opt>\n  <opt key-combo="ALT-SHIFT-4" name="END not available SAY sorry">\n    <switch varname="pitch.gk_use-custom-notavailable-handler">\n      <equals value="true">\n        <set-var location="pitch" name="gk_disp" value="notavailablesorry"/>\n        <goto node="gk_custom-disposition-handler"/>\n      </equals>\n      <else none="1">\n        <set-widget-value widget="prospect.disposition_combo" value="{{pitch.gk_notavailable}}"/>\n        <set-var location="pitch" name="Last Iterated Key" value="Not Available"/>\n        <audio namespace="gk" key="end-not-available-sorry">Oh, well I\'m sorry to hear that. I\'ll just call back another time. Have a great day. Goodbye.</audio>\n        <iterate key="usell_error-logging"/>\n        <wait milliseconds="1000"/>\n        <hangup save-and-close="1"/>\n      </else>\n    </switch>\n  </opt>\n  <opt key-combo="ALT-5" name="END call back">\n    <switch varname="pitch.gk_use-custom-callback-handler">\n      <equals value="true">\n        <set-var location="pitch" name="gk_disp" value="callback"/>\n        <goto node="gk_custom-disposition-handler"/>\n      </equals>\n      <else none="1">\n        <set-widget-value widget="prospect.disposition_combo" value="{{pitch.gk_callback}}"/>\n        <set-var location="pitch" name="Last Iterated Key" value="Callback"/>\n        <audio namespace="gk" key="end-call-back">Oh, okay, well I\'ll just call back another time. Have a great day. Goodbye.</audio>\n        <iterate key="usell_error-logging"/>\n        <wait milliseconds="1000"/>\n        <hangup save-and-close="1"/>\n      </else>\n    </switch>\n  </opt>\n  <!-- ALT-6 -->\n  <opt key-combo="ALT-6" name="Busy">\n    <set-widget-value widget="prospect.disposition_combo" value="{{pitch.prgi_insured}}"/>\n    <audio namespace="generic" key="end-courtesy-1">Alright, well, thank you for your time today...have a great day, goodbye.</audio>\n    <wait milliseconds="1000"/>\n    <hangup save-and-close="1"/>\n  </opt>\n  <!-- ALT-7 -->\n  <opt key-combo="ALT-7" name="Complete Information">\n    <set-widget-value widget="prospect.disposition_combo" value="{{pitch.prgi_Complete-information}}"/>\n    <audio namespace="gk" key="end-call-back">Oh, okay, well I\'ll just call back another time. Have a great day. Goodbye.</audio>\n    <wait milliseconds="1000"/>\n    <hangup save-and-close="1"/>\n  </opt>\n  <!-- ALT-8 -->\n  <opt key-combo="ALT-8" name="Disconnected Number">\n    <set-widget-value widget="prospect.disposition_combo" value="{{pitch.prgi_Disconnected-Number}}"/>\n    <audio namespace="generic" key="end-courtesy-1">Alright, well, thank you for your time today...have a great day, goodbye.</audio>\n    <wait milliseconds="1000"/>\n    <hangup save-and-close="1"/>\n  </opt>\n  <!-- ALT-9 -->\n  <opt key-combo="ALT-9" name="Foreign Language">\n    <set-widget-value widget="prospect.disposition_combo" value="{{pitch.prgi_Foreign-Language}}"/>\n    <goto node="generic-edu_disqualified"/>\n    <audio namespace="generic" key="end-courtesy-1">Alright, well, thank you for your time today...have a great day, goodbye.</audio>\n    <wait milliseconds="1000"/>\n    <hangup save-and-close="1"/>\n  </opt>\n  <!-- ALT-SHIFT-F2 -->\n  <opt key-combo="ALT-SHIFT-F2" name="Inbound Hang Up">\n    <set-widget-value widget="prospect.disposition_combo" value="{{pitch.UIA_inboundhungup}}"/>\n    <audio namespace="gk" key="end-call-back">Oh, okay, well I\'ll just call back another time. Have a great day. Goodbye.</audio>\n    <wait milliseconds="1000"/>\n    <hangup save-and-close="1"/>\n  </opt>\n  <!-- ALT-SHIFT-F3 -->\n  <opt key-combo="ALT-SHIFT-F3" name="Inbound Inquiry">\n    <set-widget-value widget="prospect.disposition_combo" value="{{pitch.UIA_inboundinquiry}}"/>\n    <audio namespace="gk" key="end-call-back">Oh, okay, well I\'ll just call back another time. Have a great day. Goodbye.</audio>\n    <wait milliseconds="1000"/>\n    <hangup save-and-close="1"/>\n  </opt>\n  <!-- ALT-SHIFT-F5 -->\n  <opt key-combo="ALT-SHIFT-F5" name="No Answer">\n    <set-widget-value widget="prospect.disposition_combo" value="{{pitch.ccs_no-answer}}"/>\n    <wait milliseconds="1000"/>\n    <hangup save-and-close="1"/>\n  </opt>\n  <!-- ALT-SHIFT-F6 -->\n  <opt key-combo="ALT-SHIFT-F6" name="Not Qualified">\n    <set-widget-value widget="prospect.disposition_combo" value="{{pitch.UIA_notqualified}}"/>\n    <audio namespace="gk" key="end-call-back">Oh, okay, well I\'ll just call back another time. Have a great day. Goodbye.</audio>\n    <wait milliseconds="1000"/>\n    <hangup save-and-close="1"/>\n  </opt>\n  <!-- ALT-SHIFT-F7 -->\n  <opt key-combo="ALT-SHIFT-F7" name="Referred to Website">\n    <set-widget-value widget="prospect.disposition_combo" value="{{pitch.UIA_referredtowebsite}}"/>\n    <audio namespace="gk" key="end-call-back">Oh, okay, well I\'ll just call back another time. Have a great day. Goodbye.</audio>\n    <wait milliseconds="1000"/>\n    <hangup save-and-close="1"/>\n  </opt>\n  <!-- ALT-SHIFT-F8 -->\n  <opt key-combo="ALT-SHIFT-F8" name="PERSONAL CALLBACK">\n    <set-widget-value widget="prospect.disposition_combo" value="{{pitch.UIA_personalcallback}}"/>\n    <audio namespace="gk" key="end-call-back">Oh, okay, well I\'ll just call back another time. Have a great day. Goodbye.</audio>\n    <wait milliseconds="1000"/>\n    <hangup save-and-close="1"/>\n  </opt>\n</options>',
    variables: {}
  },
  {
    uuid: "50a6db12-56a9-11e7-9ee7-02420a000908",
    name: "GSegment Data 8",
    company: null,
    slug: "gsegment-data-8",
    active: true,
    type: "options",
    xml:
      '<nodes>\n  <!-- Generic NODES -->\n  <node id="generic_is-re-and-pre">\n    <auto>\n      <declare-iterable default="1" key="generic_re-and-pre" loop="all">\n        <audio namespace="generic" key="re-and-pre-1">So, first of all, I just wanted to tell you that this call is being recorded for quality assurance purposes and is assisted by prerecorded audio, is that alright?</audio>\n        <audio namespace="generic" key="re-and-pre-2">Well, I\'m just telling you that this call is being recorded for quality assurance purposes and is assisted by prerecorded audio, is that alright?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_re-explain" loop="all">\n        <audio namespace="generic" key="re-explain-1">Well, this call is being recorded so that my managers can review my performance and make sure that I am saying the right things and asking the right questions, is that alright?</audio>\n        <audio namespace="generic" key="re-explain-2">So, this call is being recorded so that my managers can review my performance and make sure that I am saying the right things and asking the right questions, is that alright?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_pre-explain" loop="all">\n        <audio namespace="generic" key="pre-explain-1">Well, basically we use this to make sure you can understand me, and also to make sure that I\'ve said everything exactly right and in a clear and understandable way. Is that alright?</audio>\n        <audio namespace="generic" key="pre-explain-2">Well, again we use prerecorded audio so that you can be certain that I\'ve said everything exactly right and in a clear and understandable way. Is that alright?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_re-and-pre-rev" loop="all">\n        <audio namespace="generic" key="re-and-pre-rev-1">Great, this call is being recorded for quality assurance purposes and is assisted by prerecorded audio.</audio>\n        <audio namespace="generic" key="re-and-pre-rev-2">Again. Great, this call is being recorded for quality assurance purposes and is assisted by prerecorded audio.</audio>\n      </declare-iterable>\n      <iterate key="generic_re-and-pre"/>\n    </auto>\n    <options>\n      <opt key-combo="F1" name="NEXT">\n        <iterate key="generic_re-and-pre"/>\n      </opt>\n      <opt key-combo="F2" name="EXPLAIN why call is recorded">\n        <iterate key="generic_re-explain"/>\n      </opt>\n      <opt key-combo="F3" name="EXPLAIN pre-recorded audio">\n        <iterate key="generic_pre-explain"/>\n      </opt>\n    </options>\n  </node>\n  <node id="generic_email">\n    <auto>\n      <declare-iterable default="1" key="generic_email" loop="all">\n        <audio namespace="generic" key="email-1">Would you please slowly say and spell the email address that you use most often?</audio>\n        <audio namespace="generic" key="email-2">Could you please slowly say and spell the email address you use the most?</audio>\n        <audio namespace="generic" key="email-3">Will you please slowly say and spell your primary email address?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_email-repeat-username" loop="all">\n        <audio namespace="generic" key="email-repeat-username-1">Sorry, could you please spell the first part of your email address again?  You know, the part before the at sign?</audio>\n        <audio namespace="generic" key="email-repeat-username-2">I missed the first part of your email address, could you slowly spell the first part of your email address again?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_email-repeat-domain" loop="all">\n        <audio namespace="generic" key="email-repeat-domain-1">Would you mind spelling the last part of your email address again?</audio>\n        <audio namespace="generic" key="email-repeat-domain-2">Sorry, would you please slowly spell the last part of your email address again, after the at sign?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_email-gmail" loop="all">\n        <audio namespace="generic" key="email-gmail-1">And was that gmail dot com you said?</audio>\n        <audio namespace="generic" key="email-gmail-2">Did you say that was gmail dot com?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_email-yahoo" loop="all">\n        <audio namespace="generic" key="email-yahoo-1">And was that yahoo dot com you said?</audio>\n        <audio namespace="generic" key="email-yahoo-2">Did you say that was yahoo dot com?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_email-hotmail" loop="all">\n        <audio namespace="generic" key="email-hotmail-1">And was that hotmail dot com you said?</audio>\n        <audio namespace="generic" key="email-hotmail-2">Did you say that was hotmail dot com?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_email-msn" loop="all">\n        <audio namespace="generic" key="email-msn-1">And was that MSN dot com you said?</audio>\n        <audio namespace="generic" key="email-msn-2">Did you say that was MSN dot com?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_email-aol" loop="all">\n        <audio namespace="generic" key="email-aol-1">And was that AOL dot com you said?</audio>\n        <audio namespace="generic" key="email-aol-2">Did you say that was AOL dot com?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_email-comcast" loop="all">\n        <audio namespace="generic" key="email-comcast-1">And was that comcast dot net you said?</audio>\n        <audio namespace="generic" key="email-comcast-2">Did you say that was comcast dot net</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_email-cox" loop="all">\n        <audio namespace="generic" key="email-cox-1">And was that cox dot net you said?</audio>\n        <audio namespace="generic" key="email-cox-2">Did you say that was cox dot net</audio>\n      </declare-iterable>\n      <focus widget="prospect.email_box_1"/>\n      <iterate key="generic_email"/>\n    </auto>\n    <options>\n      <opt key-combo="F1" name="NEXT">\n        <set-var location="pitch" name="generic_email-verified" value="true"/>\n        <goto node="{{pitch.generic_email-next}}"/>\n      </opt>\n      <opt key-combo="F2" name="ASK repeat first part of email">\n        <iterate key="generic_email-repeat-username"/>\n      </opt>\n      <opt key-combo="F3" name="ASK repeat last part of email">\n        <iterate key="generic_email-repeat-domain"/>\n      </opt>\n      <opt key-combo="F4" name="ASK was that gmail?">\n        <iterate key="generic_email-gmail"/>\n      </opt>\n      <opt key-combo="F5" name="ASK was that yahoo?">\n        <iterate key="generic_email-yahoo"/>\n      </opt>\n      <opt key-combo="F6" name="ASK was that hotmail?">\n        <iterate key="generic_email-hotmail"/>\n      </opt>\n      <opt key-combo="F7" name="ASK was that MSN?">\n        <iterate key="generic_email-msn"/>\n      </opt>\n      <opt key-combo="F8" name="ASK was that AOL?">\n        <iterate key="generic_email-aol"/>\n      </opt>\n      <opt key-combo="F9" name="ASK was that comcast?">\n        <iterate key="generic_email-comcast"/>\n      </opt>\n      <opt key-combo="F10" name="ASK was that cox?">\n        <iterate key="generic_email-cox"/>\n      </opt>\n    </options>\n  </node>\n  <node id="generic_name">\n    <auto>\n      <declare-iterable default="1" key="generic_name" loop="all">\n        <audio namespace="generic" key="name-1">Okay, now just so we have it correct in our records, will you please spell your first and last name for me?</audio>\n        <audio namespace="generic" key="name-1">Just so we have it correct, will you spell your first and last name for me please?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_name-spell-first" loop="all">\n        <audio namespace="generic" key="name-spell-first-1">Sorry, would you mind spelling your first name for me again?</audio>\n        <audio namespace="generic" key="name-spell-first-2">Um, would you spell your first name for me please?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_name-spell-last" loop="all">\n        <audio namespace="generic" key="name-spell-last-1">And would you mind slowly spelling your last name please?</audio>\n        <audio namespace="generic" key="name-spell-last-2">Would you spell your last name for me please?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_name-reason" loop="all">\n        <audio namespace="generic" key="name-reason-1">Well, it\'s just so I can verify that we have your full name and that it\'s accurately spelled.</audio>\n        <audio namespace="generic" key="name-reason-2">We just need to have your full name and that it\'s accurately spelled.</audio>\n      </declare-iterable>\n      <focus widget="prospect.first_name_box"/>\n      <switch varname="pitch.generic_name-custom">\n        <equals value="true">\n          <iterate key="generic_name-custom-start"/>\n        </equals>\n        <else none="1">\n          <iterate key="generic_name"/>\n        </else>\n      </switch>\n    </auto>\n    <options>\n      <opt key-combo="F1" name="NEXT">\n        <set-var location="pitch" name="generic_name-verified" value="true"/>\n        <goto node="{{pitch.generic_name-next}}"/>\n      </opt>\n      <opt key-combo="F2" name="ASK spell first name">\n        <iterate key="generic_name-spell-first"/>\n      </opt>\n      <opt key-combo="F3" name="ASK spell last name">\n        <iterate key="generic_name-spell-last"/>\n      </opt>\n      <opt key-combo="F4" name="&quot;Don\'t you already have my name?&quot;">\n        <iterate key="generic_name-reason"/>\n      </opt>\n    </options>\n  </node>\n  <node id="generic_primary-phone">\n    <auto>\n      <declare-iterable default="1" key="generic_primary-phone" loop="all">\n        <audio namespace="generic" key="verify-phone-1">Now, is this the best phone number to reach you at?</audio>\n        <audio namespace="generic" key="verify-phone-2">What is the best phone number to reach you at?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_primary-phone-again" loop="all">\n        <audio namespace="generic" key="primary-phone-again-1">What was that number again?</audio>\n        <audio namespace="generic" key="primary-phone-again-2">Sorry, I missed it...what was that number again?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_primary-phone-explain" loop="all">\n        <audio namespace="generic" key="verify-phone-explain-1">Well, we just need to verify that this is the best phone number to reach you at.</audio>\n        <audio namespace="generic" key="verify-phone-explain-2">We just need to make sure that this is the best number to call you on.</audio>\n      </declare-iterable>\n      <focus widget="prospect.phone_box_1"/>\n      <iterate key="generic_primary-phone"/>\n    </auto>\n    <options>\n      <opt key-combo="F1" name="NEXT">\n        <set-var location="pitch" name="generic_primary-phone-verified" value="true"/>\n        <goto node="{{pitch.generic_primary-phone-next}}"/>\n      </opt>\n      <opt key-combo="F2" name="ASK for number again">\n        <iterate key="generic_primary-phone-again"/>\n      </opt>\n      <opt key-combo="F3" name="&quot;Why do you need this?&quot;">\n        <iterate key="generic_primary-phone-explain"/>\n      </opt>\n    </options>\n  </node>\n  <node id="generic_secondary-phone">\n    <auto>\n      <declare-iterable default="1" key="generic_secondary-phone" loop="all">\n        <audio namespace="generic" key="secondary-phone-1">Now, is there another phone number that you can be reached at?</audio>\n        <audio namespace="generic" key="secondary-phone-2">Is there an alternative phone number that you can be reached at?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_secondary-phone-again" loop="all">\n        <audio namespace="generic" key="secondary-phone-again-1">What was that number again?</audio>\n        <audio namespace="generic" key="secondary-phone-again-2">Sorry, I missed it...what was that number again?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_secondary-phone-reason" loop="all">\n        <audio namespace="generic" key="secondary-phone-reason-1">Well, it\'s really just a precaution in case you can\'t be reached at this number.</audio>\n        <audio namespace="generic" key="secondary-phone-reason-2">We just ask for another number in case you can\'t be reached at the first.</audio>\n      </declare-iterable>\n      <focus widget="prospect.phone_box_2"/>\n      <iterate key="generic_secondary-phone"/>\n    </auto>\n    <options>\n      <opt key-combo="F1" name="NEXT">\n        <set-var location="pitch" name="generic_secondary-phone-verified" value="true"/>\n        <goto node="{{pitch.generic_secondary-phone-next}}"/>\n      </opt>\n      <opt key-combo="F2" name="ASK for number again">\n        <iterate key="generic_secondary-phone-again"/>\n      </opt>\n      <opt key-combo="F3" name="&quot;Why do you need this?&quot;">\n        <iterate key="generic_secondary-phone-reason"/>\n      </opt>\n    </options>\n  </node>\n  <node id="generic_full-address">\n    <auto>\n      <declare-iterable default="1" key="generic_full-address" loop="all">\n        <audio namespace="generic" key="verify-mailing-1">And what is your street address, along with your city, state and zip code please?</audio>\n        <audio namespace="generic" key="verify-mailing-2">Would you please tell me your street address, including city, state, and zip code?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_full-address-spell" loop="all">\n        <audio namespace="generic" key="verify-mailing-spell-1">Would you mind slowly spelling that for me please?</audio>\n        <audio namespace="generic" key="verify-mailing-spell-2">Would you slowly spell your street address please?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_verify-city" loop="all">\n        <audio namespace="generic" key="verify-city-1">Would you please spell your city for me?</audio>\n        <audio namespace="generic" key="verify-city-2">Would you spell your city please?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_verify-state" loop="all">\n        <audio namespace="generic" key="verify-state-1">And what was your state again?</audio>\n        <audio namespace="generic" key="verify-state-2">What state did you say?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_verify-zip-code" loop="all">\n        <audio namespace="generic" key="verify-zip-code-1">And could you say your zip code again?</audio>\n        <audio namespace="generic" key="verify-zip-code-2">What zip code did you say?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_full-address-explain" loop="all">\n        <audio namespace="generic" key="full-address-explain-1">Well, we just need to make sure that we have your address absolutely correct.</audio>\n        <audio namespace="generic" key="full-address-explain-1">So, we just need to be sure that your address is absolutely correct in our system.</audio>\n      </declare-iterable>\n      <focus widget="prospect.address_box_1"/>\n      <iterate key="generic_full-address"/>\n    </auto>\n    <options>\n      <opt key-combo="F1" name="NEXT">\n        <set-var location="pitch" name="generic_full-address-verified" value="true"/>\n        <goto node="{{pitch.generic_full-address-next}}"/>\n      </opt>\n      <opt key-combo="F2" name="ASK spell">\n        <iterate key="generic_full-address-spell"/>\n      </opt>\n      <opt key-combo="F3" name="ASK repeat city">\n        <focus widget="prospect.city_box"/>\n        <iterate key="generic_verify-city"/>\n      </opt>\n      <opt key-combo="F4" name="ASK repeat state">\n        <focus widget="prospect.state_combo"/>\n        <iterate key="generic_verify-state"/>\n      </opt>\n      <opt key-combo="F5" name="ASK repeat zip code">\n        <focus widget="prospect.zip_box"/>\n        <iterate key="generic_verify-zip-code"/>\n      </opt>\n      <opt key-combo="F6" name="&quot;Why do you need this?&quot;">\n        <iterate key="generic_full-address-explain"/>\n      </opt>\n    </options>\n  </node>\n  <node id="generic_besttime-callback">\n    <auto>\n      <declare-iterable default="1" key="generic_besttime-callback" loop="all">\n        <audio namespace="generic" key="besttime-callback-1">Okay, so when would be the best time to call you back?</audio>\n        <audio namespace="generic" key="besttime-callback-2">When would be the best time to call you back?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_besttime-callback-them" loop="all">\n        <audio namespace="generic" key="besttime-callback-them-1">Okay, so when would be the best time for them to call you back?</audio>\n        <audio namespace="generic" key="besttime-callback-them-2">When would be the best time for them to call you back?</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_besttime-callback-explain" loop="all">\n        <audio namespace="generic" key="besttime-callback-explain-1">Well, we just want to make sure we call you back when it\'s best for you.</audio>\n        <audio namespace="generic" key="besttime-callback-explain-2">We just want to call you back at a convenient time for you.</audio>\n      </declare-iterable>\n      <declare-iterable default="1" key="generic_besttime-callback-explain-them" loop="all">\n        <audio namespace="generic" key="besttime-callback-explain-them-1">Well, they just want to make sure they call you back when it\'s best for you.</audio>\n        <audio namespace="generic" key="besttime-callback-explain-them-2">They just want to call you back at a convenient time for you.</audio>\n      </declare-iterable>\n      <switch varname="pitch.generic_besttime-callback-type">\n        <equals value="them">\n          <iterate key="generic_besttime-callback-them"/>\n        </equals>\n        <else none="1">\n          <iterate key="generic_besttime-callback"/>\n        </else>\n      </switch>\n    </auto>\n    <options>\n      <opt key-combo="F1" name="Anytime">\n        <set-var location="notes" name="generic_besttime-callback" value="anytime"/>\n      </opt>\n      <opt key-combo="F2" name="Morning">\n        <set-var location="notes" name="generic_besttime-callback" value="morning"/>\n      </opt>\n      <opt key-combo="F3" name="Afternoon">\n        <set-var location="notes" name="generic_besttime-callback" value="afternoon"/>\n      </opt>\n      <opt key-combo="F4" name="Evening">\n        <set-var location="notes" name="generic_besttime-callback" value="evening"/>\n      </opt>\n      <opt key-combo="F5" name="&quot;Why do you need this?&quot;">\n        <switch varname="pitch.generic_besttime-callback-type">\n          <equals value="them">\n            <iterate key="generic_besttime-callback-explain-them"/>\n          </equals>\n          <else none="1">\n            <iterate key="generic_besttime-callback-explain"/>\n          </else>\n        </switch>\n      </opt>\n    </options>\n  </node>\n  <!-- Endings -->\n  <node id="generic_end-callback">\n    <auto>\n      <audio namespace="generic" key="end-callback-1">Alright, well, we\'ll just try to call you back later...thank you for your time today, and have a great day, goodbye.</audio>\n      <wait milliseconds="1000"/>\n      <hangup save-and-close="1"/>\n    </auto>\n  </node>\n  <node id="generic_end-courtesy">\n    <auto>\n      <audio namespace="generic" key="end-courtesy-1">Alright, well, thank you for your time today...have a great day, goodbye.</audio>\n      <wait milliseconds="1000"/>\n      <hangup save-and-close="1"/>\n    </auto>\n  </node>\n  <node id="generic_end-nohelp">\n    <auto>\n      <audio namespace="generic" key="end-nohelp-1">Alright, well, I\'m sorry we couldn\'t help you today...thank you for your time, and you have a great day, goodbye.</audio>\n      <wait milliseconds="1000"/>\n      <hangup save-and-close="1"/>\n    </auto>\n  </node>\n</nodes>',
    variables: {}
  },
  {
    uuid: "7db931ba-5c24-11e7-9c4e-02420a000909",
    name: "GSegment Data 9",
    company: null,
    slug: "gsegment-data-9",
    active: true,
    type: "options",
    xml:
      '<options>\n  <!-- Standard options -->\n  <!-- alt+a -->\n  <opt key-combo="ALT-A" name="ITERATE: iterate the current iterable">\n    <iterate/>\n  </opt>\n  <!-- alt+z -->\n  <opt key-combo="ALT-Z" name="PREVIOUS: return to previous node">\n    <previous-node/>\n  </opt>\n  <opt key-combo="ALT-1" name="END do not call">\n    <set-var location="pitch" name="Last Iterated Key" value="DNC"/>\n    <set-widget-value widget="prospect.disposition_combo" value="{{global.gk_donotcall}}"/>\n    <audio namespace="gk" key="end-do-not-call">Okay, sorry about that. We\'ll take your number off our list. Have a nice day. Good bye.</audio>\n    <iterate key="usell_error-logging"/>\n    <wait milliseconds="1000"/>\n    <hangup save-and-close="1"/>\n  </opt>\n</options>',
    variables: {
      gk_donotcall: "40810"
    }
  },
  {
    uuid: "b4ac317a-56a9-11e7-bb69-02420a000908",
    name: "GSegment Data 10",
    company: null,
    slug: "gsegment-data-10",
    active: true,
    type: "options",
    xml:
      '<options>\n  <!-- Standard options ENDINGS -->\n  <!-- alt+b -->\n  <opt key-combo="ALT-B" name="BUSY SIGNAL: disposition call as Busy Signal">\n    <mark-call status="Busy Signal"/>\n    <hangup save-and-close="1"/>\n  </opt>\n  <!-- alt+c -->\n  <opt key-combo="ALT-C" name="CLOSE TAB: close tab (and hence hangup call) without saving prospect">\n    <close/>\n  </opt>\n  <!-- alt+h -->\n  <opt key-combo="ALT-H" name="HANGUP AND SAVE AND CLOSE: hangup call and save prospect and close tab">\n    <hangup save-and-close="1"/>\n  </opt>\n  <!-- alt+shift+h -->\n  <opt key-combo="ALT-SHIFT-H" name="HANGUP: hangup call without saving prospect or closing tab">\n    <hangup save-and-close="0"/>\n  </opt>\n  <!-- alt+i -->\n  <opt key-combo="ALT-I" name="INVALID NUMBER: disposition call as Invalid Number">\n    <mark-call status="Invalid Number"/>\n    <hangup save-and-close="1"/>\n  </opt>\n  <!-- alt+v -->\n  <opt key-combo="ALT-V" name="VOICEMAIL">\n    <set-widget-value widget="prospect.disposition_combo" value="{{pitch.std_voicemail}}"/>\n    <hangup save-and-close="1"/>\n  </opt>\n  <!-- alt+shift+s -->\n  <opt key-combo="ALT-SHIFT-S" name="SAVE: save prospect and close tab (and hence hangup call)">\n    <save close="0"/>\n  </opt>\n</options>',
    variables: {}
  }
];
